name: "${COMPOSE_PROJECT_NAME:-express-typescript-template}"

services:
  # PostgreSQL - Main application database
  app_db:
    container_name: ett-app-db
    image: postgres:16
    restart: always
    deploy:
      resources:
        limits:
          memory: 1g
          cpus: "0.5"
    environment:
      POSTGRES_USER: ${PG_APP_USER:-app_user}
      POSTGRES_PASSWORD: ${PG_APP_PASSWORD:-app_password}
      POSTGRES_DB: ${PG_APP_DATABASE:-app_db}
    ports:
      - "${PG_APP_PORT:-5432}:5432"
    volumes:
      - postgres_app_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PG_APP_USER:-app_user} -d ${PG_APP_DATABASE:-app_db}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app_network

  # PostgreSQL - Logging database
  logs_db:
    container_name: ett-logs-db
    image: postgres:16
    restart: always
    deploy:
      resources:
        limits:
          memory: 1g
          cpus: "0.5"
    environment:
      POSTGRES_USER: ${PG_LOGS_USER:-logs_user}
      POSTGRES_PASSWORD: ${PG_LOGS_PASSWORD:-logs_password}
      POSTGRES_DB: ${PG_LOGS_DATABASE:-logs_db}
    ports:
      - "${PG_LOGS_PORT:-5433}:5432"
    volumes:
      - postgres_logs_data:/var/lib/postgresql/data
    healthcheck:
      test:
        ["CMD-SHELL", "pg_isready -U ${PG_LOGS_USER:-logs_user} -d ${PG_LOGS_DATABASE:-logs_db}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app_network

  # Redis - Cache database
  cache_db:
    container_name: ett-cache-db
    image: redis:7
    restart: always
    deploy:
      resources:
        limits:
          memory: 512m
          cpus: "0.3"
    ports:
      - "${REDIS_PORT:-6379}:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis_password}
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD:-redis_password}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  postgres_app_data:
  postgres_logs_data:
  redis_data:
