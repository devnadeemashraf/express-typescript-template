# === General Application Settings ===

# The environment the application is running in (development, production, etc.)
NODE_ENV=development

# Secret key for encrypting JWT tokens (should be kept secure, not shared publicly)
# Generate using "openssl rand -base64 32" or any secure method
JWT_SECRET=your-super-hard-jwt-secret-key
JWT_EXPIRATION_TIME=1h  # JWT token expiration time (e.g., 1 hour)

# The port the Express server should listen to
PORT=8080

# === Database Configuration ===

# PostgreSQL Database (Main application database)
PG_HOST=localhost
PG_PORT=5432
PG_USER=your_pg_username
PG_PASSWORD=your_pg_password
PG_DB=your_pg_database
PG_SSL=false  # Set to true if your PostgreSQL uses SSL, usually in cloud environments

# Connection pool configuration for PostgreSQL (for performance optimization)
PG_POOL_MIN=2          # Minimum number of connections in the pool
PG_POOL_MAX=20         # Maximum number of connections in the pool
PG_POOL_IDLE_TIMEOUT=30000  # Idle timeout in milliseconds

# === Cache Configuration ===

# Redis Cache (Used for session management, caching, etc.)
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=your_redis_password  # Leave blank if Redis does not require a password
REDIS_DB=0  # Database index in Redis
REDIS_TTL=3600  # Default Time-To-Live (TTL) for cache in seconds (e.g., 1 hour)

# === Logging Database Configuration ===

# MySQL Database (For storing logs)
MYSQL_LOG_HOST=localhost
MYSQL_LOG_PORT=3306
MYSQL_LOG_USER=your_mysql_username
MYSQL_LOG_PASSWORD=your_mysql_password
MYSQL_LOG_DB=your_mysql_log_database
MYSQL_LOG_TABLE=logs  # Table name where logs will be stored

# === RBAC (Role-Based Access Control) Configuration ===

# Default user roles
ROLE_ADMIN=admin
ROLE_MODERATOR=moderator
ROLE_APPRENTICE=apprentice
ROLE_USER=user
ROLE_GUEST=guest

# The permissions that should be granted to each role (These can be extended based on the app's features)
PERMISSIONS_ADMIN="read:all,write:all,delete:all"  # Example of full permissions for admin
PERMISSIONS_USER="read:own,write:own"  # Example of limited permissions for a regular user
PERMISSIONS_GUEST="read:public"  # Example of permissions for a guest

# === Authentication Settings ===

# Enable authentication middleware (JWT, OAuth, etc.)
AUTH_ENABLED=true

# === Third-Party API Keys and Secrets ===

# Stripe API key (if handling payments)
STRIPE_SECRET_KEY=your_stripe_secret_key

# === Email Settings ===

# SMTP Server Configuration for email sending
SMTP_HOST=smtp.mailtrap.io
SMTP_PORT=587
SMTP_USER=your_smtp_username
SMTP_PASSWORD=your_smtp_password
SMTP_FROM_EMAIL=no-reply@yourdomain.com
SMTP_FROM_NAME=YourAppName

# === Security Settings ===

# CORS Configuration (Allowed Origins)
CORS_ALLOWED_ORIGINS="http://your-frontend-domain.com, http://another-trusted-domain.com"

# Session timeout (for JWT, session, or cookies)
SESSION_TIMEOUT=3600  # 1 hour

# Rate Limiting settings to prevent abuse (e.g., 100 requests per minute)
RATE_LIMIT_MAX=50
RATE_LIMIT_WINDOW=1m  # 1 minute window

# === Monitoring and Performance ===

# Datadog API key (For monitoring if you use Datadog or other service)
DATADOG_API_KEY=your_datadog_api_key

# Enable application performance monitoring (APM)
APM_ENABLED=true

# === Miscellaneous ===

# Application Name for identifying in logs and monitoring tools
APP_NAME="Express TypeScript Template"

# Sendgrid API Key for email sending (if using Sendgrid)
SENDGRID_API_KEY=your_sendgrid_api_key

# Timezone for the application (useful for logging, scheduling tasks)
TZ=UTC

# === Debugging and Development ===

# Enable debugging (Only set to true for development environment)
DEBUG=true

# Enable detailed logging for development purposes
LOG_LEVEL=debug  # Options: debug, info, warn, error
